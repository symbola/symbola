name: CI/CD

on:
  push:
    branches: [main, next]
  pull_request:
    branches: [main, next]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - core
          - function
          - number
          - object
          - set
          - iterable
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - name: Build
        run: yarn build

      - name: Jest
        run: yarn p:${{ matrix.package }} test:ci

      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./packages/${{ matrix.package }}/coverage/coverage-final.json
          flags: ${{ matrix.package }}
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - name: ESLint
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            yarn workspaces foreach --since origin/${{ github.base_ref }} -pv run lint:eslint
          else
            yarn lint:eslint
          fi

      - name: Prettier
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            yarn workspaces foreach --since origin/${{ github.base_ref }} -pv run lint:prettier
          else
            yarn lint:prettier
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next')
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: ./.github/actions/setup

      - name: Build
        run: yarn build:prod

      - name: Release
        run: yarn multi-semantic-release --ignore-private-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    name: Docs
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - name: Build
        run: yarn build

      - name: Generate
        run: yarn docs

      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
